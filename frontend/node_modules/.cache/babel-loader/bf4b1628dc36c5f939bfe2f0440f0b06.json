{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ika_l\\\\Desktop\\\\PSW\\\\PSWProject\\\\frontend\\\\src\\\\main\\\\patient\\\\appointmentReservation.jsx\";\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { Form, FormGroup } from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst AppointmentReservation = () => {\n  const [doctorName, setDoctorName] = useState(\" \");\n  const [dateLower, setDateLower] = useState(new Date());\n  const [dateUpper, setDateUpper] = useState(new Date());\n  const [prioritiseDoctor, setPrioritiseDoctor] = useState(false);\n  const [prioritiseDate, setPrioritiseDate] = useState(false);\n  const [loadedAppointmentsList, setLoadedAppointemtsList] = useState([]);\n  const displayAppointment = [];\n\n  let onSubmit = event => {\n    event.preventDefault();\n    let priority = \"\";\n\n    if (prioritiseDoctor == true) {\n      priority = \"doctor\";\n    } else if (prioritiseDate == true) {\n      priority = \"time\";\n    }\n\n    const data = {\n      DoctorName: doctorName,\n      DateLower: dateLower,\n      DateUpper: dateUpper,\n      Priority: priority\n    };\n    const url = \"http://localhost:56210/appointment/findByPriority\";\n    axios.post(url, data, {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    }).then(response => {\n      console.log(response.data);\n      setLoadedAppointemtsList(response.data.list);\n    });\n  };\n\n  const displayAppointments = async () => {\n    {\n      for (let item of loadedAppointmentsList) {\n        displayAppointment.push(item);\n      }\n    }\n  };\n\n  function dateParser(date) {\n    let d1 = date.toString();\n    return new Date(d1);\n  }\n\n  useEffect(() => {\n    displayAppointments();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    style: {\n      width: \"350px\"\n    },\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: event => setDoctorName(event.target.value),\n    placeholder: \"Doctor name\",\n    name: \"doctorName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DatePicker, {\n    selected: dateLower,\n    onChange: date => setDateLower(date),\n    dateFormat: \"yyyy/MM/dd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DatePicker, {\n    selected: dateUpper,\n    onChange: date => setDateUpper(date),\n    dateFormat: \"yyyy/MM/dd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"form-check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    class: \"form-check-input\",\n    type: \"checkbox\",\n    value: \"\",\n    id: \"doctor\",\n    onChange: event => setPrioritiseDoctor(event.target.checked),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    class: \"form-check-label\",\n    for: \"doctor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Prioritise doctor\"))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"form-check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    class: \"form-check-input\",\n    type: \"checkbox\",\n    value: \"\",\n    id: \"date\",\n    onChange: event => setPrioritiseDate(event.target.checked),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    class: \"form-check-label\",\n    for: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, \"Prioritise date\"))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, \"Filter\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, loadedAppointmentsList && loadedAppointmentsList.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, \" \", item.date, \" \", /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 27\n    }\n  }, \"Make!\"), \" \"))));\n};\n\nexport default AppointmentReservation;","map":{"version":3,"sources":["C:/Users/ika_l/Desktop/PSW/PSWProject/frontend/src/main/patient/appointmentReservation.jsx"],"names":["axios","React","useState","useEffect","Form","FormGroup","DatePicker","AppointmentReservation","doctorName","setDoctorName","dateLower","setDateLower","Date","dateUpper","setDateUpper","prioritiseDoctor","setPrioritiseDoctor","prioritiseDate","setPrioritiseDate","loadedAppointmentsList","setLoadedAppointemtsList","displayAppointment","onSubmit","event","preventDefault","priority","data","DoctorName","DateLower","DateUpper","Priority","url","post","headers","Authorization","localStorage","getItem","Accept","then","response","console","log","list","displayAppointments","item","push","dateParser","date","d1","toString","width","target","value","checked","map","id"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Form, FormGroup } from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst AppointmentReservation = () => {\r\n  const [doctorName, setDoctorName] = useState(\" \");\r\n  const [dateLower, setDateLower] = useState(new Date());\r\n  const [dateUpper, setDateUpper] = useState(new Date());\r\n  const [prioritiseDoctor, setPrioritiseDoctor] = useState(false);\r\n  const [prioritiseDate, setPrioritiseDate] = useState(false);\r\n  const [loadedAppointmentsList, setLoadedAppointemtsList] = useState([]);\r\n  const displayAppointment = [];\r\n\r\n  let onSubmit = (event) => {\r\n    event.preventDefault();\r\n    let priority = \"\";\r\n    if (prioritiseDoctor == true) {\r\n      priority = \"doctor\";\r\n    } else if (prioritiseDate == true) {\r\n      priority = \"time\";\r\n    }\r\n    const data = {\r\n      DoctorName: doctorName,\r\n      DateLower: dateLower,\r\n      DateUpper: dateUpper,\r\n      Priority: priority,\r\n    };\r\n    const url = \"http://localhost:56210/appointment/findByPriority\";\r\n    axios\r\n      .post(url, data, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setLoadedAppointemtsList(response.data.list);\r\n      });\r\n  };\r\n\r\n  const displayAppointments = async () => {\r\n    {\r\n      for (let item of loadedAppointmentsList) {\r\n        displayAppointment.push(item);\r\n      }\r\n    }\r\n  };\r\n\r\n  function dateParser(date) {\r\n    let d1 = date.toString();\r\n    return new Date(d1);\r\n  }\r\n\r\n  useEffect(() => {\r\n    displayAppointments();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Form style={{ width: \"350px\" }} onSubmit={onSubmit}>\r\n        <FormGroup>\r\n          <input\r\n            type=\"text\"\r\n            onChange={(event) => setDoctorName(event.target.value)}\r\n            placeholder=\"Doctor name\"\r\n            name=\"doctorName\"\r\n          ></input>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <DatePicker\r\n            selected={dateLower}\r\n            onChange={(date) => setDateLower(date)}\r\n            dateFormat=\"yyyy/MM/dd\"\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <DatePicker\r\n            selected={dateUpper}\r\n            onChange={(date) => setDateUpper(date)}\r\n            dateFormat=\"yyyy/MM/dd\"\r\n          />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <div class=\"form-check\">\r\n            <input\r\n              class=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              value=\"\"\r\n              id=\"doctor\"\r\n              onChange={(event) => setPrioritiseDoctor(event.target.checked)}\r\n            />\r\n            <label class=\"form-check-label\" for=\"doctor\">\r\n              Prioritise doctor\r\n            </label>\r\n          </div>\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <div class=\"form-check\">\r\n            <input\r\n              class=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              value=\"\"\r\n              id=\"date\"\r\n              onChange={(event) => setPrioritiseDate(event.target.checked)}\r\n            />\r\n            <label class=\"form-check-label\" for=\"date\">\r\n              Prioritise date\r\n            </label>\r\n          </div>\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <button type=\"submit\">Filter</button>\r\n        </FormGroup>\r\n      </Form>\r\n\r\n      <div>\r\n        {loadedAppointmentsList &&\r\n          loadedAppointmentsList.map((item) => (\r\n            <li key={item.id}>\r\n              {\" \"}\r\n              {item.date} <button>Make!</button>{\" \"}\r\n            </li>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppointmentReservation;\r\n"]},"metadata":{},"sourceType":"module"}